#!/usr/bin/env zsh

alias bx='bundle exec'
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
alias derp='git commit --amend --no-edit'
alias develop='git fetch; git checkout develop; git pull'
alias dock='docker-compose'
alias dx='docker-compose exec'
alias dxa='docker-compose exec app'
alias gds='git diff --staged'
alias kill-sophos='while true; do sudo kill -9 $(pgrep Sophos) >/dev/null 2>/dev/null; sleep 5; done'
alias master='git fetch; git checkout master; git pull'
alias ncctl='nectar-collector-ctl'
alias smoke='bundle exec rake'
alias tap='tmux attach -t "${PWD##*/}" || tmux new-session -s "${PWD##*/}"'

alias stop-api-services="cd ~/Projects/weedmaps_api && make it stop && cd -"
alias stop-core-services="cd ~/Projects/weedmaps && make it stop && cd -"

# Cut a semver release
# Usage: cutter VERSION <SHA>
# If a SHA is not specified, cuts at head
cutter() {
  git stash
  develop
  git branch --set-upstream-to origin/release/${1} release/${1}
  if [ -z ${2} ]; then
    git reset --hard ${2}
  fi
  git push
  git checkout -
}

# Refspec push a release to a branch
# Usage: push VERSION ENVIRONMENT
# Ex: push 1.2.3 staging
push() {
  git stash
  git checkout release/${1}
  git branch --set-upstream-to origin/release/${1} release/${1}
  git reset --hard HEAD
  git pull
  git push origin release/${1}:${2} -f
  git checkout -
}

# Get release notes for a version
# Usage: notes VERSION <PREV_VERSION>
# If PREV_VERSION is not specified, infers based on semver
notes() {
  if [ -z "${2}" ]; then
    PREV_VERSION="$(git tag | grep "^\d*\.\d*\.\d*$" | sort -t. -k 1,1n -k 2,2n -k 3,3n | tail -n 1)"
  else
    PREV_VERSION="${2}"
  fi
  wget -o /dev/null -qO- "https://build-api.internal-weedmaps.com/repos/weedmaps/release_notes.md?base=release/${PREV_VERSION}&head=release/${1}" | clipcopy
  open "https://github.com/GhostGroup/weedmaps/releases/new?tag=${1}&target=release/${1}&title=${1}"
}

# Cherry-pick a commit into a release
# Usage: pick SHA VERSION
pick() {
  git stash
  git checkout release/${2}
  git branch --set-upstream-to origin/release/${1} release/${1}
  git reset --hard HEAD
  git pull
  git cherry-pick ${1}
  git push -f
  git checkout -
}
